{"version":3,"sources":["GlobalStyles.js","components/NavBar.jsx","components/Switch.jsx","App.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","background","color","StyledNavBar","styled","nav","NavBar","className","type","StyledSwitch","label","name","Switch","onClick","toggleTheme","darkMode","window","matchMedia","matches","themes","light","dark","App","useState","setTheme","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiKeA,EA/JMC,YAAH,s8FA+DF,SAACC,GAAD,OAAWA,EAAMC,MAAMC,cAC5B,SAACF,GAAD,OAAWA,EAAMC,MAAME,S,cC/D5BC,EAAeC,IAAOC,IAAV,ghBAiBD,SAACN,GAAD,OAAWA,EAAMC,MAAME,SASzB,SAASI,IACtB,OACE,cAACH,EAAD,UACE,qBAAKI,UAAU,aAAf,SACE,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,IACA,wBAAQC,KAAK,SAASD,UAAU,UAAhC,SACE,cAAC,IAAD,a,aCjCNE,EAAeL,IAAOM,MAAV,6hBAUF,SAACX,GAAD,MACS,UAArBA,EAAMC,MAAMW,KAAmB,qBAAuB,wBAC/C,SAACZ,GAAD,MACc,UAArBA,EAAMC,MAAMW,KAAmB,qBAAuB,wBAmB3C,SAASC,EAAOb,GAC7B,OACE,eAACU,EAAD,WACE,uBACED,KAAK,WACL,+CAAuCT,EAAMC,MAA7C,KACAa,QAASd,EAAMe,cAEjB,+BAAuB,UAAhBf,EAAMC,MAAoB,cAAC,IAAD,IAAkB,cAAC,IAAD,SCrCzD,IAAMe,EAAWC,OAAOC,WAAW,gCAAgCC,QAE7DC,EAAS,CACbC,MAAO,CACLT,KAAM,QACNT,MAAO,qBACPD,WAAY,sBAEdoB,KAAM,CACJV,KAAM,OACNT,MAAO,qBACPD,WAAY,uBAID,SAASqB,IACtB,MAA0BC,mBAAS,SAAnC,mBAAOvB,EAAP,KAAcwB,EAAd,KAcA,OARAC,qBAAU,WAEND,EADET,EACO,OAEA,WAEV,IAGD,mCACE,eAAC,IAAD,CAAef,MAAOmB,EAAOnB,GAA7B,UACE,cAAC,EAAD,IACA,cAACM,EAAD,IACA,iCACE,uCACA,cAACM,EAAD,CAAQZ,MAAOA,EAAOc,YAnB9B,WACsBU,EAAV,UAAVxB,EAA6B,OAAmB,oBCpBpD0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.4b9bc460.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n/*\r\n=============== \r\nVariables\r\n===============\r\n*/\r\n:root {\r\n  /* dark shades of primary color*/\r\n  --clr-primary-1: hsl(205, 86%, 17%);\r\n  --clr-primary-2: hsl(205, 77%, 27%);\r\n  --clr-primary-3: hsl(205, 72%, 37%);\r\n  --clr-primary-4: hsl(205, 63%, 48%);\r\n  /* primary/main color */\r\n  --clr-primary-5: hsl(205, 78%, 60%);\r\n  /* lighter shades of primary color */\r\n  --clr-primary-6: hsl(205, 89%, 70%);\r\n  --clr-primary-7: hsl(205, 90%, 76%);\r\n  --clr-primary-8: hsl(205, 86%, 81%);\r\n  --clr-primary-9: hsl(205, 90%, 88%);\r\n  --clr-primary-10: hsl(205, 100%, 96%);\r\n  /* darkest grey - used for headings */\r\n  --clr-grey-1: hsl(209, 61%, 16%);\r\n  --clr-grey-2: hsl(211, 39%, 23%);\r\n  --clr-grey-3: hsl(209, 34%, 30%);\r\n  --clr-grey-4: hsl(209, 28%, 39%);\r\n  /* grey used for paragraphs */\r\n  --clr-grey-5: hsl(210, 22%, 49%);\r\n  --clr-grey-6: hsl(209, 23%, 60%);\r\n  --clr-grey-7: hsl(211, 27%, 70%);\r\n  --clr-grey-8: hsl(210, 31%, 80%);\r\n  --clr-grey-9: hsl(212, 33%, 89%);\r\n  --clr-grey-10: hsl(210, 36%, 96%);\r\n  --clr-white: #fff;\r\n  --clr-red-dark: hsl(360, 67%, 44%);\r\n  --clr-red-light: hsl(360, 71%, 66%);\r\n  --clr-green-dark: hsl(125, 67%, 44%);\r\n  --clr-green-light: hsl(125, 71%, 66%);\r\n  --clr-black: #222;\r\n  --transition: all 0.3s linear;\r\n  --spacing: 0.1rem;\r\n  --radius: 0.25rem;\r\n  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\r\n  --max-width: 1170px;\r\n  --fixed-width: 620px;\r\n}\r\n\r\n/*\r\n=============== \r\nGlobal Styles\r\n===============\r\n*/\r\n*,\r\n::after,\r\n::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\r\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  background: ${(props) => props.theme.background};\r\n  color: ${(props) => props.theme.color};\r\n  line-height: 1.5;\r\n  font-size: 0.875rem;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4 {\r\n  letter-spacing: var(--spacing);\r\n  text-transform: capitalize;\r\n  line-height: 1.25;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\nh1 {\r\n  font-size: 3rem;\r\n}\r\n\r\nh2 {\r\n  font-size: 2rem;\r\n}\r\n\r\nh3 {\r\n  font-size: 1.25rem;\r\n}\r\n\r\nh4 {\r\n  font-size: 0.875rem;\r\n}\r\n\r\np {\r\n  margin-bottom: 1.25rem;\r\n  color: var(--clr-grey-5);\r\n}\r\n\r\n@media screen and (min-width: 800px) {\r\n  h1 {\r\n    font-size: 4rem;\r\n  }\r\n  h2 {\r\n    font-size: 2.5rem;\r\n  }\r\n  h3 {\r\n    font-size: 1.75rem;\r\n  }\r\n  h4 {\r\n    font-size: 1rem;\r\n  }\r\n  body {\r\n    font-size: 1rem;\r\n  }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    line-height: 1;\r\n  }\r\n}\r\n\r\n.section {\r\n  width: 90vw;\r\n  margin: 0 auto;\r\n  max-width: var(--max-width);\r\n}\r\n\r\n@media screen and (min-width: 992px) {\r\n  .section {\r\n    width: 95vw;\r\n  }\r\n}\r\n\r\nmain {\r\n  min-height: calc(100vh - 40px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Accessibility */\r\n  input[type=\"checkbox\"]:focus + span, button:focus {\r\n    outline: 0.15rem solid #183EFA;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from \"styled-components\";\r\nimport { FaReact, FaBars } from \"react-icons/fa\";\r\n\r\nconst StyledNavBar = styled.nav`\r\n  .nav-center {\r\n    max-width: var(--max-width);\r\n    margin: 0 auto;\r\n    padding: 0.25rem 0;\r\n\r\n    .nav-header {\r\n      display: grid;\r\n      grid-template-columns: repeat(2, 1fr);\r\n      align-items: center;\r\n      font-size: 2rem;\r\n      margin: 0 0.5rem;\r\n\r\n      .nav-btn {\r\n        line-height: 0;\r\n        background: transparent;\r\n        border-color: transparent;\r\n        color: ${(props) => props.theme.color};\r\n        cursor: pointer;\r\n        justify-self: end;\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <StyledNavBar>\r\n      <div className=\"nav-center\">\r\n        <div className=\"nav-header\">\r\n          <FaReact />\r\n          <button type=\"button\" className=\"nav-btn\">\r\n            <FaBars />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </StyledNavBar>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { GiSunflower, GiMoon } from \"react-icons/gi\";\r\n\r\nconst StyledSwitch = styled.label`\r\n  /* Slider pill */\r\n  display: flex;\r\n  line-height: 0;\r\n  height: 2rem;\r\n  width: 4rem;\r\n  font-size: 2rem;\r\n  border-radius: 30px;\r\n  margin: 0 0.25rem;\r\n  transition: var(--transition);\r\n  background: ${(props) =>\r\n    props.theme.name === \"light\" ? \"hsl(209, 61%, 16%)\" : \"hsl(210, 36%, 96%)\"};\r\n  color: ${(props) =>\r\n    props.theme.name === \"light\" ? \"hsl(210, 36%, 96%)\" : \"hsl(209, 61%, 16%)\"};\r\n\r\n  /* Hide defualt checkbox */\r\n  input[type=\"checkbox\"] {\r\n    height: 0;\r\n    width: 0;\r\n  }\r\n\r\n  /* Move span when checked */\r\n  input[type=\"checkbox\"]:checked + span {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  span {\r\n    line-height: 0;\r\n    transition: var(--transition);\r\n  }\r\n`;\r\n\r\nexport default function Switch(props) {\r\n  return (\r\n    <StyledSwitch>\r\n      <input\r\n        type=\"checkbox\"\r\n        aria-label={`Toggle theme, currently ${props.theme}.`}\r\n        onClick={props.toggleTheme}\r\n      />\r\n      <span>{props.theme === \"light\" ? <GiSunflower /> : <GiMoon />}</span>\r\n    </StyledSwitch>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport NavBar from \"./components/NavBar\";\nimport Switch from \"./components/Switch\";\n\nconst darkMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\nconst themes = {\n  light: {\n    name: \"light\",\n    color: \"hsl(209, 61%, 16%)\",\n    background: \"hsl(210, 36%, 96%)\",\n  },\n  dark: {\n    name: \"dark\",\n    color: \"hsl(210, 36%, 96%)\",\n    background: \"hsl(209, 61%, 16%)\",\n  },\n};\n\nexport default function App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  function toggleTheme() {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  useEffect(function () {\n    if (darkMode) {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  }, []);\n\n  return (\n    <>\n      <ThemeProvider theme={themes[theme]}>\n        <GlobalStyles />\n        <NavBar />\n        <main>\n          <h1>React</h1>\n          <Switch theme={theme} toggleTheme={toggleTheme} />\n        </main>\n      </ThemeProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}